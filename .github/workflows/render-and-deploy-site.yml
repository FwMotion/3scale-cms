name: Generate Site and Deploy to GitHub Pages

on:
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref
        required: true
        type: string
      dry-run:
        description: Dry Run
        required: false
        type: boolean
        default: false
  workflow_call:
    inputs:
      git-ref:
        required: true
        type: string
      dry-run:
        required: false
        type: boolean
        default: false

jobs:
  render-site:
    name: Render Site
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Checkout 3scale CMS
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.git-ref }}

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'
          settings-path: ${{ github.workspace }}
          server-id: github

      - name: Determine Home Directory
        id: find-home
        run: |
          echo "home=$HOME" >> $GITHUB_OUTPUT

      - name: Cache Maven Local Repo
        uses: actions/cache@v3
        with:
          path: ${{ steps.find-home.outputs.home }}/.m2/repository
          key: ${{ runner.os }}-${{ runner.arch }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-maven-

      - name: Set Up Maven Repo Filters
        run: |
          mkdir -p ${{ steps.find-home.outputs.home }}/.m2/repository/.remoteRepositoryFilters/
          cp -av ${{ github.workspace }}/.mvn/filters/*.txt ${{ steps.find-home.outputs.home }}/.m2/repository/.remoteRepositoryFilters/

      - name: Set Up Pages
        uses: actions/configure-pages@v4
        if: ${{ success() && !inputs.dry-run }}

      - name: Run Maven Site
        run: >-
          ./mvnw
          --settings ${{ github.workspace }}/settings.xml
          --batch-mode
          verify
          post-site
          site:stage
          -Ppitest-include-it
          -Ddefault.dokka-srclink-base=${{ github.server_url }}/${{ github.repository }}/tree/${{ inputs.git-ref }}
          -DtopSiteURL=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}

      - name: Upload Site Artifacts
        uses: actions/upload-pages-artifact@v2
        if: ${{ success() && !inputs.dry-run }}
        with:
          path: ${{ github.workspace }}/target/staging

  deploy-site:
    name: Deploy Site to GitHub Pages
    runs-on: ubuntu-latest

    if: ${{ success() && !inputs.dry-run }}

    permissions:
      pages: write
      id-token: write

    needs:
      - render-site

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
