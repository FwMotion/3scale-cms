<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation=" http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd http://www.w3.org/2001/XMLSchema-instance https://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.fwmotion</groupId>
    <artifactId>3scale-cms-tools-parent</artifactId>
    <version>1.0.4-SNAPSHOT</version>
    <relativePath>../parent</relativePath>
  </parent>

  <artifactId>3scale-cms-rest-client</artifactId>
  <version>1.0.4-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>3scale CMS Tools (REST client library)</name>
  <url>https://fwmotion.github.io/3scale-cms/rest-client</url>
  <description><![CDATA[
    Java library to interact with 3scale Content Management System via the
    CMS's REST API. This requires use of either a Provider Key or an
    Access Token that has been granted permission to the Account Management
    API and the hidden Content Management API
  ]]></description>

  <distributionManagement>
    <site>
      <id>fwmotion.github.io</id>
      <url>https://fwmotion.github.io/3scale-cms/rest-client</url>
    </site>
  </distributionManagement>

  <properties>
    <project.build.outputTimestamp>1668725936</project.build.outputTimestamp>
  </properties>

  <dependencies>
    <!-- Other dependencies -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.validation</groupId>
      <artifactId>jakarta.validation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
    </dependency>

    <!-- Dependencies for generated code from openapi-generator -->
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jakarta.rs</groupId>
      <artifactId>jackson-jakarta-rs-json-provider</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>
    <dependency>
      <groupId>io.github.threeten-jaxb</groupId>
      <artifactId>threeten-jaxb-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.annotation</groupId>
      <artifactId>jakarta.annotation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents.client5</groupId>
      <artifactId>httpclient5</artifactId>
    </dependency>
    <dependency>
      <groupId>org.brotli</groupId>
      <artifactId>dec</artifactId>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>io.gatehill.imposter</groupId>
      <artifactId>config-dynamic</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.gatehill.imposter</groupId>
      <artifactId>distro-embedded</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.gatehill.imposter</groupId>
      <artifactId>imposter-server</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.gatehill.imposter</groupId>
      <artifactId>mock-openapi</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.gatehill.imposter</groupId>
      <artifactId>mock-rest</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.logmanager</groupId>
      <artifactId>jboss-logmanager</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>io.github.floverfelt</groupId>
        <artifactId>find-and-replace-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>default-find-and-replace</id>
            <!--
              openapi-generator's java generator doesn't fully adopt the
              useJakartaEe in the current version, because it still tries to use
              the Jackson JAX-RS library. For now, just do a find/replace
              to adjust the source after generation
            -->
            <phase>process-sources</phase>
            <goals>
              <goal>find-and-replace</goal>
            </goals>
            <configuration>
              <!-- baseDir is relative to ${project.basedir} -->
              <baseDir>target/generated-sources/threescale-cms-client/src/main/java</baseDir>
              <fileMask>.java</fileMask>
              <replacementType>file-contents</replacementType>
              <recursive>true</recursive>
              <encoding>UTF-8</encoding>
              <findRegex>import com\.fasterxml\.jackson\.jaxrs\.json\.JacksonJsonProvider;</findRegex>
              <replaceValue>import com.fasterxml.jackson.jakarta.rs.json.JacksonJsonProvider;</replaceValue>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <configuration>
          <includes>
            <!-- Agent uses package/class names -->
            <include>com.fwmotion.threescale.cms</include>
            <include>com.fwmotion.threescale.cms.*</include>
            <include>com.redhat.threescale.rest.cms.XmlEnabledApiClient</include>

            <!-- Report uses filenames -->
            <include>com/fwmotion/threescale/cms/**/*</include>
            <include>com/redhat/threescale/rest/cms/XmlEnabledApiClient.class</include>
          </includes>
          <excludes>
            <!-- Exclude Mapstruct-generated classes -->
            <exclude>com/fwmotion/threescale/cms/mappers/*Impl.class</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>io.smallrye</groupId>
        <artifactId>jandex-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jetbrains.dokka</groupId>
        <artifactId>dokka-maven-plugin</artifactId>
        <configuration>
          <jdkVersion>${maven.compiler.release}</jdkVersion>

          <includes>
            <include>${project.basedir}/src/main/dokka/module.md</include>
            <include>${project.basedir}/src/main/dokka/packages.md</include>
          </includes>

          <sourceDirectories>
            <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
            <sourceDirectory>${project.build.directory}/generated-sources/annotations</sourceDirectory>
            <sourceDirectory>${project.build.directory}/generated-sources/threescale-cms-client/src/main/java</sourceDirectory>
          </sourceDirectories>

          <sourceLinks>
            <sourceLink>
              <path>${project.basedir}/src/main/java</path>
              <url>${default.dokka-srclink-base}/rest-client/src/main/java</url>
              <lineSuffix>${default.dokka-linesuffix}</lineSuffix>
            </sourceLink>
          </sourceLinks>

<!--          <samples>-->
<!--            <sample>src/test/samples</sample>-->
<!--          </samples>-->

          <reportUndocumented>true</reportUndocumented>
          <suppressObviousFunctions>true</suppressObviousFunctions>
          <suppressInheritedMembers>true</suppressInheritedMembers>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-3scale-cms-rest-client</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>
                ${project.basedir}/src/main/resources/api-spec/3scale-cms.yaml
              </inputSpec>
              <output>
                ${project.build.directory}/generated-sources/threescale-cms-client
              </output>
              <skipValidateSpec>false</skipValidateSpec>

              <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>

              <globalProperties>
                <skipFormModel>false</skipFormModel>
              </globalProperties>

              <generatorName>java</generatorName>

              <!-- Generate API client, but no test stubs or docs -->
              <generateApis>true</generateApis>
              <generateApiTests>false</generateApiTests>
              <generateApiDocumentation>false</generateApiDocumentation>

              <!--
                Generate models based upon OpenAPI schemas, but no tests
                or docs
              -->
              <generateModels>true</generateModels>
              <generateModelTests>false</generateModelTests>
              <generateModelDocumentation>false</generateModelDocumentation>

              <generateSupportingFiles>true</generateSupportingFiles>
              <supportingFilesToGenerate>
                .openapi-generator-ignore,ApiClient.java,ApiException.java,ApiKeyAuth.java,Authentication.java,Configuration.java,HttpBasicAuth.java,HttpBearerAuth.java,JavaTimeFormatter.java,Pair.java,RFC3339DateFormat.java,ServerConfiguration.java,ServerVariable.java,StringUtil.java,VERSION,FILES
              </supportingFilesToGenerate>

              <!-- Configuration specific to the Java client generator -->
              <configOptions>
                <!-- Library options -->
                <library>apache-httpclient</library>
                <dateLibrary>java8</dateLibrary>
                <serializationLibrary>jackson</serializationLibrary>

                <!-- Configure packages -->
                <invokerPackage>
                  com.redhat.threescale.rest.cms
                </invokerPackage>
                <apiPackage>
                  com.redhat.threescale.rest.cms.api
                </apiPackage>
                <modelPackage>
                  com.redhat.threescale.rest.cms.model
                </modelPackage>

                <!--
                  Don't validate data (these are mostly used in server
                  generation)
                -->
                <useBeanValidation>false</useBeanValidation>
                <performBeanValidation>false</performBeanValidation>

                <!-- Use Java 8, serializable, XML -->
                <java8>true</java8>
                <serializableModel>true</serializableModel>
                <withXml>true</withXml>
                <useJakartaEe>true</useJakartaEe>

                <!-- Other options -->
                <disallowAdditionalPropertiesIfNotPresent>
                  false
                </disallowAdditionalPropertiesIfNotPresent>
                <enumUnknownDefaultCase>true</enumUnknownDefaultCase>
                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                <openApiNullable>false</openApiNullable>
                <sortModelPropertiesByRequiredFlag>
                  false
                </sortModelPropertiesByRequiredFlag>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <executions>
          <execution>
            <id>default-mutationCoverage</id>
            <phase>verify</phase>
            <goals>
              <goal>mutationCoverage</goal>
            </goals>
            <configuration>
              <targetClasses>
                <targetClass>com.fwmotion.threescale.cms.*</targetClass>
              </targetClasses>
              <excludedClasses>
                <excludedClass>com.fwmotion.threescale.cms.mappers.*Impl</excludedClass>
              </excludedClasses>
              <targetTests>
                <targetTest>com.fwmotion.threescale.cms.*</targetTest>
              </targetTests>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <excludeDefaults>true</excludeDefaults>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>javadoc-no-fork</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>dependencies</report>
              <report>dependency-info</report>
              <report>index</report>
              <report>issue-management</report>
              <report>licenses</report>
              <report>plugins</report>
              <report>scm</report>
              <report>summary</report>
              <report>team</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

</project>
